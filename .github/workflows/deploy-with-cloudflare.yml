name: Deploy IC Studio with Cloudflare Cache Purge

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

# 设置权限
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个并发部署，跳过正在运行和最新队列之间的运行队列
concurrency:
  group: "pages"
  cancel-in-progress: false

# 默认设置为bash
defaults:
  run:
    shell: bash

jobs:
  # 构建任务
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.121.0
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: 🛠️ 安装 Hugo CLI (缓存优化)
        id: hugo-cache
        uses: actions/cache@v3
        with:
          path: /tmp/hugo
          key: hugo-${{ env.HUGO_VERSION }}-linux-amd64
          
      - name: 📥 下载 Hugo (如果未缓存)
        if: steps.hugo-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p /tmp/hugo
          wget -O /tmp/hugo/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb
          
      - name: ⚡ 安装 Hugo
        run: sudo dpkg -i /tmp/hugo/hugo.deb

      - name: 🛠️ 安装 Node.js (优化版本)
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: 📦 安装依赖
        run: npm ci

      - name: 🎨 构建 CSS
        run: npm run build:css

      - name: 🔧 设置 GitHub Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: 🏗️ 构建 Hugo 网站
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --cleanDestinationDir \
            --baseURL "${{ steps.pages.outputs.base_url }}/" \
            --destination ./public

      - name: 🗜️ 压缩静态资源
        run: |
          # Gzip 压缩主要文件
          find public -type f \( -name "*.html" -o -name "*.css" -o -name "*.js" \) \
            -exec gzip -k -9 {} \;

      - name: 🔍 检查构建结果
        run: |
          if [ ! -f "public/index.html" ]; then
            echo "❌ 主页文件缺失"
            exit 1
          fi
          echo "✅ 构建成功"

      - name: 📤 上传构建结果
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # 部署任务
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 🚀 部署到 GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Cloudflare 缓存清除任务（可选）
  purge-cloudflare-cache:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' && github.repository_owner == 'ICSTUDIO86'
    continue-on-error: true
    steps:
      - name: ⚡ 清除 Cloudflare 缓存
        uses: jakejarvis/cloudflare-purge-action@master
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        continue-on-error: true
        
      - name: ✅ 部署状态
        run: |
          echo "🎉 网站部署完成！"
          echo "📝 如果配置了Cloudflare，缓存将在几分钟内更新"
          echo "🌐 访问: https://icstudio.club"